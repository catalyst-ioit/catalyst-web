/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TeamRouteImport } from './routes/team'
import { Route as ServicesRouteImport } from './routes/services'
import { Route as ProjectsRouteImport } from './routes/projects'
import { Route as PartnersRouteImport } from './routes/partners'
import { Route as JoinusRouteImport } from './routes/joinus'
import { Route as GalleryRouteImport } from './routes/gallery'
import { Route as ContactRouteImport } from './routes/contact'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'

const TeamRoute = TeamRouteImport.update({
  id: '/team',
  path: '/team',
  getParentRoute: () => rootRouteImport,
} as any)
const ServicesRoute = ServicesRouteImport.update({
  id: '/services',
  path: '/services',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsRoute = ProjectsRouteImport.update({
  id: '/projects',
  path: '/projects',
  getParentRoute: () => rootRouteImport,
} as any)
const PartnersRoute = PartnersRouteImport.update({
  id: '/partners',
  path: '/partners',
  getParentRoute: () => rootRouteImport,
} as any)
const JoinusRoute = JoinusRouteImport.update({
  id: '/joinus',
  path: '/joinus',
  getParentRoute: () => rootRouteImport,
} as any)
const GalleryRoute = GalleryRouteImport.update({
  id: '/gallery',
  path: '/gallery',
  getParentRoute: () => rootRouteImport,
} as any)
const ContactRoute = ContactRouteImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/gallery': typeof GalleryRoute
  '/joinus': typeof JoinusRoute
  '/partners': typeof PartnersRoute
  '/projects': typeof ProjectsRoute
  '/services': typeof ServicesRoute
  '/team': typeof TeamRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/gallery': typeof GalleryRoute
  '/joinus': typeof JoinusRoute
  '/partners': typeof PartnersRoute
  '/projects': typeof ProjectsRoute
  '/services': typeof ServicesRoute
  '/team': typeof TeamRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/contact': typeof ContactRoute
  '/gallery': typeof GalleryRoute
  '/joinus': typeof JoinusRoute
  '/partners': typeof PartnersRoute
  '/projects': typeof ProjectsRoute
  '/services': typeof ServicesRoute
  '/team': typeof TeamRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/contact'
    | '/gallery'
    | '/joinus'
    | '/partners'
    | '/projects'
    | '/services'
    | '/team'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/contact'
    | '/gallery'
    | '/joinus'
    | '/partners'
    | '/projects'
    | '/services'
    | '/team'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/contact'
    | '/gallery'
    | '/joinus'
    | '/partners'
    | '/projects'
    | '/services'
    | '/team'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  ContactRoute: typeof ContactRoute
  GalleryRoute: typeof GalleryRoute
  JoinusRoute: typeof JoinusRoute
  PartnersRoute: typeof PartnersRoute
  ProjectsRoute: typeof ProjectsRoute
  ServicesRoute: typeof ServicesRoute
  TeamRoute: typeof TeamRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/team': {
      id: '/team'
      path: '/team'
      fullPath: '/team'
      preLoaderRoute: typeof TeamRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/services': {
      id: '/services'
      path: '/services'
      fullPath: '/services'
      preLoaderRoute: typeof ServicesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects': {
      id: '/projects'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProjectsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/partners': {
      id: '/partners'
      path: '/partners'
      fullPath: '/partners'
      preLoaderRoute: typeof PartnersRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/joinus': {
      id: '/joinus'
      path: '/joinus'
      fullPath: '/joinus'
      preLoaderRoute: typeof JoinusRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/gallery': {
      id: '/gallery'
      path: '/gallery'
      fullPath: '/gallery'
      preLoaderRoute: typeof GalleryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  ContactRoute: ContactRoute,
  GalleryRoute: GalleryRoute,
  JoinusRoute: JoinusRoute,
  PartnersRoute: PartnersRoute,
  ProjectsRoute: ProjectsRoute,
  ServicesRoute: ServicesRoute,
  TeamRoute: TeamRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
